def fibo(x):
    if x ==1 or x==2:
        return 1
    return fibo(x-1) + fibo(x-2)

print(fibo(4))

# 피보나치 수열은 이와 같이 재귀함수를 사용하여 만들어 낼 수 있다.
# 그런데 피보나차 수열의 코드를 이렇게 작성 하게 되면 심각한 문제가 생길 수가 있다.
# F(n) 함수에서 n이 커지면 커질수록 수행 시간이 기하급수작으로 늘어나게 된다.
# 빅오 표기법을 사용하면 O(n^2)의 지수 시간이 소요된다고 한다.
# 예를 들어서 N = 30이면 , 약 10억 가량의 연산을 수행해야 한다.
# 이러한 단점을 해결하기 위해 다이나믹 프로그래밍을 사용하면 쉽게 풀어 낼 수 있다.
# 다이나믹 프로그래밍을 사용한 방법은 Fibo_dinamic.py에서 설명 하겠다.
